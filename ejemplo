;script con funciones dummy para practicar


(declare-datatypes () ((Arit (Var (val String)) (Number (n Real)) (Mult (n-m Real) (v String))  (Sum (f-s Arit) (s-s Arit)) (Sub (f-sb Arit) (s-sb Arit)))
                       ))
(define-fun foo ((x Arit)) Int (
  match x (
    ((Var v ) 1)
    ((Number n) 2)
    ((Mult f s) 3)
    ((Sum f s) 4)
    ((Sub f s)5)

  )
))

(simplify (foo (Var "dummy")))
(simplify  (+ 1 2))

; Axiom  for  list  append: version 1; List is a parametric  datatype; with  constructors "nil" and "cons";
(forall  ((l1 (List  Int)) (l2 (List  Int )))(= (append  l1 l2)(match l1 ((nil l2)((cons h t) (cons h (append t l2 )))))))
; Axiom  for  list  append: version 2
(forall  ((l1 (List  Int)) (l2 (List  Int )))(= (append  l1 l2)(match l1 (((cons h t) (cons h (append t l2)))(_ l2 )))))    